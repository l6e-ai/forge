name: ruff

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'packages/**'
      - 'tests/**'
      - '.github/workflows/ruff.yml'

permissions:
  contents: read
  pull-requests: read

jobs:
  ruff:
    name: Run Ruff (lint + format check)
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]
        poetry-version: ["2.1.4"]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v4
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Cache Poetry virtual environment
        with:
          path: ./.venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies (with dev extras)
        run: |
          poetry install --no-root --with dev --no-interaction --no-ansi
      - name: Run Ruff (lint)
        run: |
          poetry run ruff check
      - name: Run Ruff (format check)
        run: |
          poetry run ruff format --check


